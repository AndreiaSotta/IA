{
  "nodes": [
    {
      "parameters": {
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/appointments",
        "options": {
          "timeout": 5000,
          "headers": {
            "Prefer": "return=minimal"
          }
        },
        "headers": {
          "Authorization": "Bearer {{ $env.SUPABASE_SERVICE_KEY }}",
          "apikey": "{{ $env.SUPABASE_SERVICE_KEY }}",
          "Content-Type": "application/json"
        },
        "httpMethod": "POST",
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={\n  \"session_id\": \"{{ $json.sessionId }}\",\n  \"event_id\": \"{{ $json.eventId }}\",\n  \"appointment_type\": \"{{ $json.extractedAppointmentDetails.type }}\",\n  \"user_name\": \"{{ $json.extractedAppointmentDetails.name }}\",\n  \"user_email\": \"{{ $json.extractedAppointmentDetails.email }}\",\n  \"language\": \"{{ $json.extractedAppointmentDetails.language }}\",\n  \"start_datetime\": \"{{ $json.startDateTime }}\",\n  \"end_datetime\": \"{{ $json.endDateTime }}\",\n  \"status\": \"pending\",\n  \"notes\": \"{{ $json.extractedAppointmentDetails.notes }}\",\n  \"created_at\": \"{{ $json.timestamp }}\"\n}"
      },
      "name": "Save Appointment to DB",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "functionCode": "// Prepare Confirmation Email: Generates email content and ICS attachment for appointment confirmation.\n\nconst inputData = $json;\nconst appointment = inputData.extractedAppointmentDetails;\nconst { eventTitle, startDateTime, vevent } = inputData; // Changed icsBody to vevent\n\n// Format event time for email body (Lisbon timezone)\nconst eventTimeFormatted = new Date(startDateTime).toLocaleString(inputData.language === 'pt' ? 'pt-PT' : 'en-GB', {timeZone: 'Europe/Lisbon', dateStyle: 'full', timeStyle: 'short'});\n\nconst subject = inputData.language === 'pt' \n  ? `Confirmação de Agendamento: ${eventTitle}`\n  : `Appointment Confirmation: ${eventTitle}`;\n\nconst bodyText = inputData.language === 'pt' \n  ? `Olá ${appointment.name},\\n\\nO seu agendamento para uma reunião de '${appointment.type}' foi confirmado para ${eventTimeFormatted}.\\n\\nEm anexo encontrará o convite para o seu calendário.\\n\\nCom os melhores cumprimentos,`\n  : `Hi ${appointment.name},\\n\\nYour appointment for a '${appointment.type}' meeting has been confirmed for ${eventTimeFormatted}.\\n\\nThe calendar invitation is attached.\\n\\nBest regards,`;\n\nconst emailData = {\n  to: appointment.email,\n  from: process.env.SMTP_FROM_EMAIL,\n  subject: subject,\n  text: bodyText,\n  attachments: [\n    {\n      // Use btoa to base64 encode the ICS body for email attachment\n      content: btoa(vevent),\n      filename: `${inputData.eventId}.ics`,\n      contentType: 'text/calendar'\n    }\n  ]\n};\n\nreturn [{ json: { ...inputData, emailData } }];"
      },
      "name": "Prepare Confirmation Email",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        0
      ]
    },
    {
      "parameters": {
        "toEmail": "={{ $json.emailData.to }}",
        "fromEmail": "={{ $json.emailData.from }}",
        "subject": "={{ $json.emailData.subject }}",
        "text": "={{ $json.emailData.text }}",
        "options": {
          "attachments": "={{ $json.emailData.attachments }}"
        }
      },
      "name": "Send Confirmation Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "credentials": {
        "smtp": {
          "id": "smtpCreds",
          "name": "SMTP Account"
        }
      },
      "position": [
        400,
        0
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"response\": \"{{ $json.response }}\",\n  \"language\": \"{{ $json.detectedLanguage }}\",\n  \"sessionId\": \"{{ $json.sessionId }}\",\n  \"timestamp\": \"{{ $json.timestamp }}\",\n  \"appointmentCreated\": true,\n  \"appointmentDetails\": {\n    \"eventId\": \"{{ $json.eventId }}\",\n    \"title\": \"{{ $json.eventTitle }}\",\n    \"startTime\": \"{{ $json.startDateTime }}\",\n    \"endTime\": \"{{ $json.endDateTime }}\",\n    \"type\": \"{{ $json.extractedAppointmentDetails.type }}\",\n    \"userEmail\": \"{{ $json.extractedAppointmentDetails.email }}\"\n  }\n}"
      },
      "name": "Appointment Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        600,
        0
      ]
    }
  ],
  "connections": {
    "Save Appointment to DB": {
      "main": [
        [
          "Prepare Confirmation Email",
          0
        ]
      ]
    },
    "Prepare Confirmation Email": {
      "main": [
        [
          "Send Confirmation Email",
          0
        ]
      ]
    },
    "Send Confirmation Email": {
      "main": [
        [
          "Appointment Response",
          0
        ]
      ]
    }
  },
  "name": "Save Appointment Sub-Workflow",
  "active": false,
  "id": "save-appointment-sub-workflow",
  "meta": {
    "workflow": {
      "tags": []
    }
  },
  "settings": {
    "timezone": "Europe/Lisbon",
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": null
  },
  "staticData": {}
}